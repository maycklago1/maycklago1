# Importa a biblioteca customtkinter para criar a interface gráfica
import customtkinter as Ctk
# Importa a biblioteca openpyxl para manipular arquivos Excel
from openpyxl import load_workbook


def window_adicionar():
    def adicionar_contato(caminho_arquivo='dados.xlsx', nome_planilha='Plan1'):
        # Carrega a planilha Excel do arquivo especificado
        workbook = load_workbook(filename=caminho_arquivo)

        # Seleciona a planilha pelo nome fornecido
        sheet = workbook[nome_planilha]

        # Obtém o nome e o telefone do novo contato a partir dos campos de entrada
        adicionar_nome = add_nome.get().upper()
        adicionar_telefone = add_telefone.get().upper()
        adicionar_cidade = add_cidade.get().upper()
        adicionar_estado = add_estado.get()

        if len(adicionar_nome) < 1 or len(adicionar_telefone) < 9 or len(adicionar_cidade) < 1:
            print('oi')
            resultado_adicionar.configure(text='PREENCHA TODOS OS CAMPOS!')
        else:
            # Adiciona o novo contato como uma nova linha na planilha
            sheet.append([adicionar_nome, adicionar_telefone, adicionar_cidade, adicionar_estado])
            resultado_adicionar.configure(text='Contato adicionado com sucesso!')
            workbook.save(filename=caminho_arquivo)

        # Salva as mudanças feitas na planilha

        # Atualiza o texto do resultado na interface com uma mensagem de sucesso

    janela_add = Ctk.CTkToplevel(janela)
    janela_add.title('ADICIONAR NOVO CONTATO')
    janela_add.geometry('600x400+650+170')
    janela_add.maxsize(600, 400)  # Define o tamanho máximo da janela
    janela_add.minsize(600, 400)  # Define o tamanho mínimo da janela
    janela_add.attributes('-topmost', True)
    janela_add.grid_columnconfigure((0, 1), weight=1)

    # Cria um campo de entrada de texto para o nome do novo contato
    add_nome = Ctk.CTkEntry(janela_add, font=('Lucida Sans Typewriter Negrito Inclinado', 12), text_color='black', placeholder_text='Nome do contato',
                            fg_color='#7c7b6c', placeholder_text_color='black', corner_radius=-10)
    add_nome.grid(row=6, column=0, padx=20, pady=20, sticky="ew", columnspan=2)

    # Cria um campo de entrada de texto para o telefone do novo contato
    add_telefone = Ctk.CTkEntry(janela_add, font=('Lucida Sans Typewriter Negrito Inclinado', 12), text_color='black', placeholder_text='Numero do telefone',
                                fg_color='#7c7b6c', placeholder_text_color='black', corner_radius=-10)
    add_telefone.grid(row=7, column=0, padx=20, pady=20,
                      sticky="ew", columnspan=2)

    add_cidade = Ctk.CTkEntry(janela_add, font=('Lucida Sans Typewriter Negrito Inclinado', 12), text_color='black', placeholder_text='Cidade',
                              fg_color='#7c7b6c', placeholder_text_color='black', corner_radius=-10)
    add_cidade.grid(row=8, column=0, padx=20, pady=20,
                    sticky="ew", columnspan=1)

    estados = ['AC', 'AL', 'AM', 'AP', 'BA', 'CE', 'DF', 'ES', 'GO', 'MA', 'MG', 'MS', 'MT',
               'PA', 'PB', 'PE', 'PI', 'PR', 'RJ', 'RN', 'RO', 'RR', 'RS', 'SC', 'SE', 'SP', 'TO']

    add_estado = Ctk.CTkOptionMenu(janela_add, values=estados)
    add_estado.grid(row=8, column=1, padx=20, pady=20,
                    sticky="ew", columnspan=2)

    botao_adicionar = Ctk.CTkButton(janela_add, font=('Copperplate Gothic Bold', 12), text='ADICIONAR CONTATO',
                                    corner_radius=-10, fg_color='#000039', hover_color='#042a5f', command=adicionar_contato)
    botao_adicionar.grid(row=9, padx=20, pady=20, sticky="ew", columnspan=2)

    resultado_adicionar = Ctk.CTkLabel(janela_add,  font=('Lucida Console', 14), text_color='#000039',
                                       text='Insira os dados do contato.', width=200,  fg_color='#bab986')
    resultado_adicionar.grid(row=10, column=0, padx=20,
                             pady=20, sticky="ew", columnspan=2)


def window_resultado():
    nomex = []

    def buscar_contato(caminho_arquivo='dados.xlsx', nome_planilha='Plan1'):
        # Carrega a planilha Excel do arquivo especificado
        workbook = load_workbook(filename=caminho_arquivo)

        # Seleciona a planilha pelo nome fornecido
        sheet = workbook[nome_planilha]

        # Inicializa a variável de controle para verificar se o contato foi encontrado
        encontrado = 0

        # Converte o nome procurado para maiúsculas
        nome_procurado = campo_pesquisa.get().upper()

        # Itera pelas linhas da planilha, especificamente nas colunas A e B
        for row in sheet.iter_rows(min_row=1, max_row=sheet.max_row, min_col=1, max_col=4):
            # Verifica se o valor na coluna A (primeira coluna) corresponde ao nome procurado
            if row[0].value == nome_procurado:
                # Define a variável de controle como 1 (encontrado)
                encontrado = 1

                # Obtém o nome e o telefone do contato encontrado
                nome = row[0].value
                telefone = row[1].value
                cidade = row[2].value
                estado = row[3].value

                # Atualiza o texto do resultado na interface com o nome e telefone encontrados
                resultado.configure(text=f'{nome} \n \n {
                                    telefone} \n \n {cidade} - {estado}')

                # Se o contato foi encontrado, habilita o botão de exclusão
                if encontrado == 1:
                    excluir_ctt.configure(state='normal')

        # Se o contato não foi encontrado, atualiza o texto do resultado com uma mensagem apropriada
        if encontrado == 0:
            resultado.configure(
                text='Contato não encontrado na base de dados.')

        # Retorna a variável de controle (1 se encontrado, 0 se não)
        return encontrado

    def excluir_contato(caminho_arquivo='dados.xlsx', nome_planilha='Plan1'):
        # Carrega a planilha Excel do arquivo especificado
        workbook = load_workbook(filename=caminho_arquivo)

        # Seleciona a planilha pelo nome fornecido
        sheet = workbook[nome_planilha]

        # Converte o nome procurado para maiúsculas
        nome_procurado = campo_pesquisa.get().upper()

        # Itera pelas linhas da planilha, especificamente nas colunas A e B
        for row in sheet.iter_rows(min_row=1, max_row=sheet.max_row, min_col=1, max_col=2):
            # Verifica se o valor na coluna A (primeira coluna) corresponde ao nome procurado
            if row[0].value == nome_procurado:
                # Se o nome for encontrado, apaga a linha correspondente
                sheet.delete_rows(row[0].row, 1)

                # Atualiza o texto do resultado na interface com uma mensagem de sucesso
                resultado.configure(text='Contato excluído com sucesso!')
                break

        # Salva as mudanças feitas na planilha
        workbook.save(filename=caminho_arquivo)

    janela_result = Ctk.CTkToplevel(janela)
    janela_result.title('INFORMAÇÕES DO CONTATO')
    janela_result.geometry('600x400+650+170')
    janela_result.maxsize(600, 400)  # Define o tamanho máximo da janela
    janela_result.minsize(600, 400)  # Define o tamanho mínimo da janela
    janela_result.attributes('-topmost', True)
    janela_result.grid_columnconfigure((0, 1), weight=1)

    campo_pesquisa = Ctk.CTkEntry(janela_result, font=('Lucida Sans Typewriter Negrito Inclinado', 12), text_color='black',
                                  placeholder_text='nome', fg_color='#7c7b6c', placeholder_text_color='black', corner_radius=-10)
    campo_pesquisa.grid(row=2, column=0, padx=20, pady=20)

    pesquisa = Ctk.CTkButton(janela_result, font=('Copperplate Gothic Bold', 12), text='PESQUISAR',
                             command=buscar_contato, corner_radius=-10, fg_color='#000039', hover_color='#042a5f')
    pesquisa.grid(row=2, column=1, padx=20, pady=20)

    resultado = Ctk.CTkLabel(janela_result, font=('Lucida Console', 20), text_color='#000039',
                             text='RESULTADO DA PESQUISA', fg_color='#bab986')
    resultado.grid(row=3, column=0, padx=20, pady=20,
                   sticky="ew", columnspan=2)

    excluir_ctt = Ctk.CTkButton(janela_result, font=('Copperplate Gothic Bold', 12), text='EXCLUIR CONTATO!', fg_color='#8c0908',
                                text_color='white', hover_color='#b61c17', corner_radius=-10, state='disabled', command=excluir_contato)
    excluir_ctt.grid(row=6, sticky="ew",  columnspan=2, padx=20, pady=20)


# Variáveis globais para armazenar os dados de contatos e pesquisa
nome = ''
telefone = ''


# Criação da janela principal da aplicação
janela = Ctk.CTk()

# Configurações da janela principal
janela.title("AGENDA")  # Define o título da janela
# Define o tamanho e a posição inicial da janela
janela.geometry("720x560+650+170")
janela.maxsize(720, 560)  # Define o tamanho máximo da janela
janela.minsize(720, 560)  # Define o tamanho mínimo da janela
janela.config(bg='#f8f69f')  # Define a cor de fundo da janela
# Configura as colunas para expandirem igualmente
janela.grid_columnconfigure((0, 1), weight=1)


# Cria um rótulo de título na janela principal
titulo = Ctk.CTkLabel(janela, text='AGENDA TELEFÔNICA', font=(
    'Arial Black', 36), text_color=('white'), fg_color=('#000039'))
titulo.grid(row=0, column=0, padx=20, pady=20, sticky="ew", columnspan=2)


# Cria um rótulo para a seção de pesquisa
titulo_pesquisar = Ctk.CTkButton(janela, height=100, width=300, text='PESQUISAR', font=(
    'Arial Black', 18), fg_color=('#3e3e53'), command=window_resultado)
titulo_pesquisar.grid(row=1, column=0, padx=20, pady=50,
                      sticky="ew", columnspan=1)


titulo_adicionar = Ctk.CTkButton(janela, height=100, width=300, text='ADICIONAR NOVO CONTATO', font=(
    'Arial Black', 18), fg_color=('#3e3e53'), command=window_adicionar)
titulo_adicionar.grid(row=1, column=1, padx=20, pady=50,
                      sticky="ew", columnspan=2)


# Cria um rótulo para exibir o status da adição de um novo contato


# Inicia o loop principal da interface gráfica
janela.mainloop()
